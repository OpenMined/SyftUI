name: Generate Release JSON

on:
  release:
    types: [published]

jobs:
  publish-release:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate and upload release.json
        id: generate
        shell: bash
        run: |
          set -euo pipefail

          RELEASE_JSON=$(cat <<EOF
          {
            "version": "${{ github.event.release.tag_name }}",
            "notes": $(echo "${{ github.event.release.body }}" | jq -Rs .),
            "pub_date": "${{ github.event.release.published_at }}",
            "platforms": {
              "darwin-aarch64": {
                "signature": "$(curl -fsSL $(gh release view ${{ github.event.release.tag_name }} --json assets --jq '.assets[] | select(.name=="SyftBox.app.tar.gz.sig") | .url'))",
                "url": $(gh release view ${{ github.event.release.tag_name }} --json assets --jq '.assets[] | select(.name=="SyftBox.app.tar.gz") | .url')
              }
            }
          }
          EOF
          )

          echo "$RELEASE_JSON" > release.json
          echo "Generated release.json:"
          cat release.json

          gh release upload ${{ github.event.release.tag_name }} release.json --clobber

          # remove all the .sig files from the release
          for asset_id in $(gh release view ${{ github.event.release.tag_name }} --json assets --jq '.assets[] | select(.name | endswith(".sig")) | .name'); do
            gh release delete-asset -y ${{ github.event.release.tag_name }} "$asset_id"
          done
