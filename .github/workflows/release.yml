name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Semantic version of the release (e.g. v0.1.0)"
        required: true
        type: string

jobs:
  build_macos:
    name: Build MacOS app bundle
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - args: "aarch64-apple-darwin"
            arch: "silicon"
          # - args: "x86_64-apple-darwin"
          #   arch: "intel"
    env:
      APPLE_ID: ${{ secrets.APPLE_ID }}
      APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
      APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
      APPLE_SIGNING_IDENTITY: ${{ secrets.APPLE_SIGNING_IDENTITY }}
    steps:
      - name: Checkout project
        uses: actions/checkout@v4

      - name: Import signing certificate into keychain
        uses: apple-actions/import-codesign-certs@v3
        with:
          p12-file-base64: ${{ secrets.SIGNING_CERTIFICATE_P12_DATA }}
          p12-password: ${{ secrets.SIGNING_CERTIFICATE_PASSWORD }}

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.args }}

      - name: Install dependencies
        run: bun install

      - name: Build app
        run: |
          bun run tauri build --ci --target ${{ matrix.args }} --bundles dmg

      - name: Setup git config
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          git config user.email "${GITHUB_ACTOR_ID}+${GITHUB_ACTOR}@users.noreply.github.com"
          git config user.name "$(gh api /users/${GITHUB_ACTOR} | jq .name -r)"
          git config -l

      - name: Push changes to SyftUI repo
        run: |
          # Create a new tag for the release
          git tag ${{ inputs.version }}

          # Push the tag to the remote repo
          git push origin ${{ inputs.version }}

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ inputs.version }}
          name: ${{ inputs.version }}
          generate_release_notes: true
          make_latest: true
          files: ./src-tauri/target/release/bundle/dmg/*.dmg

      - name: Clean up all keychains
        if: always()
        run: security delete-keychain signing_temp
